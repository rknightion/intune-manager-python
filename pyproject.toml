[project]
name = "intune-manager"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
license = "MIT"
authors = [
    { name = "Rob Knight", email = "12484127+rknightion@users.noreply.github.com" }
]
requires-python = ">=3.13"
dependencies = [
    "httpx>=0.28.1",
    "keyring>=25.6.0",
    "loguru>=0.7.3",
    "msal>=1.34.0",
    "platformdirs>=4.5.0",
    "pydantic>=2.12.3",
    "pyside6>=6.10.0",
    "pywin32-ctypes>=0.2.0; platform_system == 'Windows'",
    "python-dotenv>=1.1.1",
    "qasync>=0.28.0",
    "sqlalchemy>=2.0.44",
    "sqlmodel>=0.0.27",
    "structlog>=25.4.0",
]

[project.scripts]
intune-manager = "intune_manager:main"
intune-manager-app = "intune_manager.cli.tasks:run_app"
intune-manager-lint = "intune_manager.cli.tasks:lint"
intune-manager-fmt = "intune_manager.cli.tasks:fmt"
intune-manager-typecheck = "intune_manager.cli.tasks:typecheck"
intune-manager-tests = "intune_manager.cli.tasks:tests"
intune-manager-license-check = "intune_manager.cli.tasks:license_check"

[build-system]
requires = ["uv_build>=0.9.5,<0.10.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "licensecheck>=2025.1.0",
    "mypy>=1.18.2",
    "nuitka>=2.8.4",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-qt>=4.5.0",
    "pyyaml>=6.0.3",
    "respx>=0.22.0",
    "ruff>=0.14.1",
]

[tool.mypy]
python_version = "3.13"
exclude = ["tests/"]
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true
disallow_untyped_defs = false  # Enable later for stricter type coverage

[[tool.mypy.overrides]]
module = "PySide6.*"
ignore_missing_imports = false

[tool.licensecheck]
# Specify project license (must match [project.license])
license = "MIT"
# Output format: simple (human-readable), json, markdown, html, csv, ansi
format = "simple"
# Return non-zero exit code if incompatible licenses found (for CI/CD)
zero = false
# Show only packages with failing/incompatible licenses
show_only_failing = false
# Optionally ignore specific packages (e.g., dev-only tools)
ignore_packages = []
# Fail on specific license types (uncomment if needed)
# fail_licenses = ["GPL-3.0", "AGPL-3.0"]  # Uncomment to fail on copyleft
# Only allow specific licenses (whitelist approach - use if stricter control needed)
# only_licenses = ["MIT", "Apache-2.0", "BSD-3-Clause", "ISC", "Python-2.0"]
